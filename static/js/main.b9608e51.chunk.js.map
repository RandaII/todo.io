{"version":3,"sources":["utils/index.js","actions/index.js","components/header/index.js","components/header/header.js","components/todo-categories/img/index.js","components/todo-categories/index.js","components/todo-categories/todo-categories.js","components/todo-item/todo-item.js","components/todo-item/index.js","components/add-button/index.js","components/add-button/addButton.js","components/todo-list/todo-list.js","components/todo-list/index.js","components/add-form/index.js","components/add-form/add-form.js","components/notification/index.js","components/notification/notification.js","components/error-boundary/error-boundary.js","components/error-boundary/index.js","components/app/app.js","components/app/index.js","reducers/index.js","store.js","index.js"],"names":["StorageChanger","_sortByDate","a","b","date","returnRecords","localStorage","records","setItem","JSON","parse","sort","addRecord","text","recordObject","Date","getTime","done","recordsArray","push","stringify","editRecord","id","index","findIndex","value","changeDoneStatus","dateId","recordId","deleteRecord","slice","filterByDoneStatus","arr","doneStatus","filter","setAddForm","payload","type","fetchRecordsWithCallback","actionName","argument","Header","children","className","icons","xmlns","x","y","enableBackground","version","viewBox","xmlSpace","d","list","menu","width","height","TodoCategories","map","href","title","icon","to","mapDispatchToProps","TodoItem","connect","onInputChange","onCloseClick","recDate","nowDate","getDay","getMonth","getFullYear","Intl","DateTimeFormat","hour","minute","format","day","month","formatDate","tabIndex","onKeyDown","target","key","dataset","todoItem","name","onChange","checked","htmlFor","onClick","status","record","fill","AddButton","clickFunc","fetchRecords","TodoList","useState","addButtonClass","setAddButtonClass","todoItems","useEffect","classes","document","getElementById","clientHeight","AddForm","buttonTitle","sendFunc","areaText","areaValue","setAreaValue","areaValueIsEmpty","setAreaValueIsEmpty","onSubmit","evt","preventDefault","trim","cols","rows","onFocus","autoFocus","Notification","ErrorBoundary","state","hasError","this","setState","props","Component","addForm","categoriesLinks","scrollOnTop","setTimeout","window","scrollBy","top","body","offsetHeight","behavior","formAddFunc","formEditFunc","routes","path","element","exact","pathname","useLocation","headerTitleId","formCloseHandler","onBlur","relatedTarget","focus","onMouseDown","onKeyUp","Transition","in","timeout","mountOnEnter","unmountOnExit","App","initialState","reducer","action","store","createStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.b9608e51.chunk.js","sourcesContent":["// необходим для взаимодействия с localStorage\r\nclass StorageChanger {\r\n  // сортировка даты по убыванию\r\n  static _sortByDate = (a, b) => {\r\n    if (a.date > b.date) {\r\n      return -1;\r\n    }\r\n    if (a.date < b.date) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  // вернуть массив заметок из localstorage, с сортировкой\r\n  static returnRecords = () => {\r\n    if (!localStorage.records){\r\n      localStorage.setItem(`records`, `[]`);\r\n    }\r\n    return JSON.parse(localStorage.records).sort(this._sortByDate);\r\n  }\r\n\r\n  // добавить запись\r\n  static addRecord = (text) =>{\r\n\r\n    const recordObject = {\r\n      date: new Date().getTime(),\r\n      text,\r\n      done: false\r\n    };\r\n\r\n    // в случае пустого records, создает первоначальную структуру\r\n    if (!localStorage.records){\r\n      localStorage.records = JSON.stringify([recordObject]);\r\n    }\r\n    else {\r\n      const recordsArray = JSON.parse(localStorage.records);\r\n      recordsArray.push(recordObject);\r\n      localStorage.records = JSON.stringify(recordsArray);\r\n    }\r\n  }\r\n\r\n  // отредактировать запись\r\n  static editRecord = ({id, text}) => {\r\n    const recordsArray = JSON.parse(localStorage.records);\r\n    const index = recordsArray.findIndex((value) => value.date === id);\r\n\r\n    if (index !== -1){\r\n      recordsArray[index].text = text;\r\n      recordsArray[index].date = new Date().getTime();\r\n      localStorage.records = JSON.stringify(recordsArray);\r\n    }\r\n  }\r\n\r\n  // изменить done статус, в качестве id используется date\r\n  static changeDoneStatus = (dateId) =>{\r\n    let recordsArray = this.returnRecords();\r\n    const recordId = recordsArray.findIndex(({date})=> date === dateId);\r\n    recordsArray[recordId].done = !recordsArray[recordId].done;\r\n    localStorage.records = JSON.stringify(recordsArray);\r\n  }\r\n\r\n  // удалить запись, в качестве id используется date\r\n  static deleteRecord = (dateId) =>{\r\n    const recordsArray = this.returnRecords();\r\n    const recordId = recordsArray.findIndex(({date})=> date === dateId);\r\n    localStorage.records = JSON.stringify([...recordsArray.slice(0, recordId), ...recordsArray.slice(recordId + 1)]);\r\n  }\r\n}\r\n\r\n// фильтр по done статусу\r\nconst filterByDoneStatus = (arr, doneStatus) => arr.filter((value) => value.done === doneStatus);\r\n\r\n// форматирование даты\r\nconst formatDate = (date) =>{\r\n\r\n  let recDate = new Date(date);\r\n  const nowDate = new Date();\r\n\r\n  // форматируем дату заметки, в зависимости от дня добавления\r\n  if (recDate.getDay() === nowDate.getDay()\r\n    && recDate.getMonth() === nowDate.getMonth()\r\n    && recDate.getFullYear() === nowDate.getFullYear()){\r\n\r\n    return new Intl.DateTimeFormat(`ru`, {hour:`2-digit`, minute:`2-digit`}).format(new Date(date));\r\n  }\r\n\r\n  return new Intl.DateTimeFormat(`ru`, {day:`numeric`, month:`long`}).format(new Date(date));\r\n}\r\n\r\nexport {\r\n  filterByDoneStatus,\r\n  formatDate,\r\n  StorageChanger\r\n}","import {StorageChanger} from \"../utils\";\r\n\r\n// изменить AddForm, payload:{\r\n//     status: bool,\r\n//     type: `edit` или `add`,\r\n//     record:{\r\n//       id: number,\r\n//       text: string\r\n//     }\r\n//   }\r\nconst setAddForm = (payload) =>({\r\n  type: `SET_ADD_FORM`,\r\n  payload\r\n});\r\n\r\n// получить массив заметок, имеет структуру: [{date, text, done}...]\r\nconst fetchRecords = (payload) =>({\r\n    type: `FETCH_RECORDS`,\r\n    payload\r\n});\r\n\r\n// принимает string название метода для storageChanger, который необходимо выполнить перед отправкой массива записей\r\nconst fetchRecordsWithCallback = (actionName, argument) =>{\r\n  (typeof actionName === `string`) && StorageChanger[actionName]?.(argument);\r\n  return fetchRecords(StorageChanger.returnRecords());\r\n};\r\n\r\nexport {\r\n  setAddForm,\r\n  fetchRecords,\r\n  fetchRecordsWithCallback\r\n}","import Header from \"./header\";\r\nexport default Header;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./header.scss\";\r\n\r\nconst Header = ({children = ``}) => <div className=\"header\">{children}</div>;\r\n\r\nHeader.propTypes = {\r\n  children: PropTypes.string\r\n}\r\n\r\nexport default Header;","\r\nconst icons = {\r\n  done: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      x=\"0\"\r\n      y=\"0\"\r\n      enableBackground=\"new 0 0 456.556 456.556\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 456.556 456.556\"\r\n      xmlSpace=\"preserve\"\r\n      className=\"todo-categories__icon\"\r\n    >\r\n      <path d=\"M228.278 456.556C102.403 456.556 0 354.153 0 228.278S102.403 0 228.278 0c42.641 0 84.233 11.834 120.287 34.228 6.301 3.91 8.232 12.19 4.322 18.492-3.917 6.301-12.197 8.246-18.492 4.322-31.794-19.751-68.49-30.185-106.117-30.185-111.065 0-201.422 90.36-201.422 201.422S117.213 429.7 228.278 429.7c111.062 0 201.422-90.36 201.422-201.422 0-22.324-3.623-44.243-10.77-65.147-2.399-7.015 1.35-14.652 8.365-17.051 7.029-2.385 14.652 1.35 17.051 8.365 8.099 23.709 12.211 48.551 12.211 73.834-.001 125.874-102.404 228.277-228.279 228.277z\"></path>\r\n      <path d=\"M228.278 305.727c-3.406 0-6.7-1.294-9.193-3.644L111.66 201.17c-5.406-5.077-5.672-13.575-.594-18.981 5.078-5.399 13.575-5.679 18.981-.587l97.092 91.206L403.564 63.371c4.77-5.672 13.246-6.399 18.918-1.616 5.672 4.777 6.399 13.246 1.616 18.918L238.545 300.951a13.434 13.434 0 01-9.484 4.756c-.258.013-.524.02-.783.02z\"></path>\r\n    </svg>\r\n  ),\r\n  list: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      x=\"0\"\r\n      y=\"0\"\r\n      enableBackground=\"new 0 0 791.911 791.911\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 791.911 791.911\"\r\n      xmlSpace=\"preserve\"\r\n      className=\"todo-categories__icon\"\r\n    >\r\n      <path d=\"M641.43 0H150.481c-25.924 0-46.964 21.129-46.964 46.964v697.983c0 25.924 21.129 46.964 46.964 46.964H641.43c25.924 0 46.964-21.13 46.964-46.964V46.964C688.395 21.129 667.354 0 641.43 0zm11.542 745.036c0 6.747-4.794 11.541-11.541 11.541h-490.95c-6.747 0-11.541-4.794-11.541-11.541V46.964c0-6.747 4.794-11.541 11.541-11.541H641.43c6.747 0 11.541 4.794 11.541 11.541v698.072zm-81.5-188.923c0 9.588-7.635 17.223-17.223 17.223H333.633c-9.588 0-17.223-7.635-17.223-17.223s7.635-17.223 17.223-17.223H554.16c8.701-.976 17.312 7.635 17.312 17.223zm0 106.447c0 9.588-7.635 17.223-17.223 17.223H333.633c-9.588 0-17.223-7.635-17.223-17.223s7.635-17.223 17.223-17.223H554.16c8.701-.977 17.312 7.635 17.312 17.223zm0-211.916c0 9.588-7.635 17.223-17.223 17.223H333.633c-9.588 0-17.223-7.635-17.223-17.223s7.635-17.223 17.223-17.223H554.16c8.701-.001 17.312 7.635 17.312 17.223zm0-104.494c0 9.588-7.635 17.223-17.223 17.223H333.633c-9.588 0-17.223-7.635-17.223-17.223s7.635-17.223 17.223-17.223H554.16c8.701 0 17.312 7.635 17.312 17.223zM315.433 241.657c0-9.588 7.635-17.223 17.223-17.223h218.575c9.588 0 17.223 7.635 17.223 17.223s-7.635 17.223-17.223 17.223H332.745c-9.588 0-17.312-7.635-17.312-17.223zm0-105.47c0-9.588 7.635-17.223 17.223-17.223h218.575c9.588 0 17.223 7.635 17.223 17.223s-7.635 17.223-17.223 17.223H332.745c-9.588.977-17.312-7.634-17.312-17.223zm-63.3 0c0 10.565-8.612 19.176-19.176 19.176-10.565 0-19.176-8.612-19.176-19.176 0-10.565 8.612-19.176 19.176-19.176 10.565 0 19.176 8.612 19.176 19.176zm0 105.47c0 10.565-8.612 19.176-19.176 19.176-10.565 0-19.176-8.612-19.176-19.176s8.612-19.176 19.176-19.176c10.565-.977 19.176 7.635 19.176 19.176zm0 102.54c0 10.565-8.612 19.176-19.176 19.176-10.565 0-19.176-8.612-19.176-19.176s8.612-19.176 19.176-19.176c10.565-.888 19.176 7.724 19.176 19.176zm0 104.582c0 10.565-8.612 19.176-19.176 19.176-10.565 0-19.176-8.612-19.176-19.176 0-10.565 8.612-19.176 19.176-19.176 10.565 0 19.176 8.612 19.176 19.176zm0 108.311c0 10.565-8.612 19.176-19.176 19.176-10.565 0-19.176-8.612-19.176-19.176 0-10.565 8.612-19.176 19.176-19.176 10.565 0 19.176 8.611 19.176 19.176zm0 105.47c0 10.565-8.612 19.176-19.176 19.176-10.565 0-19.176-8.612-19.176-19.176 0-10.565 8.612-19.176 19.176-19.176 10.565-.977 19.176 8.611 19.176 19.176z\"></path>\r\n    </svg>\r\n  ),\r\n  menu: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"96\"\r\n      height=\"96\"\r\n      x=\"0\"\r\n      y=\"0\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 96 96\"\r\n      xmlSpace=\"preserve\"\r\n      className=\"todo-categories__icon\"\r\n    >\r\n      <switch>\r\n        <g>\r\n          <path d=\"M12 28h72a4 4 0 000-8H12a4 4 0 000 8zm72 16H12a4 4 0 000 8h72a4 4 0 000-8zm0 24H12a4 4 0 000 8h72a4 4 0 000-8z\"></path>\r\n        </g>\r\n      </switch>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default icons","import TodoCategories from \"./todo-categories\";\r\nexport default TodoCategories;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport icons from \"./img\";\r\n\r\nimport \"./todo-categories.scss\";\r\n\r\nconst TodoCategories = ({children}) =>\r\n  (<aside className=\"todo-categories\">\r\n    <div className=\"todo-categories__wrapper\">\r\n      {children.map(({id, href, title, icon}) =>\r\n        (<NavLink to={href} className=\"todo-categories__item\" key={id}>\r\n          {icons[icon]}\r\n          < span className=\"todo-categories__title\">{title}</span>\r\n        </NavLink>)\r\n      )}\r\n    </div>\r\n  </aside>);\r\n\r\nTodoCategories.propTypes = {\r\n  children: PropTypes.arrayOf(PropTypes.shape({\r\n    href: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    icon: PropTypes.string.isRequired\r\n  })).isRequired\r\n}\r\n\r\nexport default TodoCategories;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {formatDate} from \"../../utils\";\r\nimport {setAddForm} from \"../../actions\";\r\n\r\nimport \"./todo-item.scss\";\r\nimport \"./img/edit.svg\";\r\n\r\nconst TodoItem = ({children:{date, text, done}, onInputChange, onCloseClick, setAddForm}) =>{\r\n\r\n  // вызвать editForm\r\n  const editFunc = () =>{\r\n    setAddForm({\r\n      status: true,\r\n      type: `edit`,\r\n      record:{\r\n        id: date,\r\n        text\r\n      }\r\n    });\r\n  }\r\n\r\n  // форматируем дату заметки, в зависимости от дня добавления\r\n  let recDate = formatDate(date);\r\n\r\n  // функция меняет статус done у заметки при нажатии enter\r\n  const onKeyDown = ({target, key}) =>{\r\n    if (target.dataset.todoItem && key === `Enter`){\r\n      onInputChange();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo-item\" tabIndex=\"0\" onKeyDown={onKeyDown} data-todo-item>\r\n      <input type=\"checkbox\"\r\n             name={date}\r\n             id={date}\r\n             onChange={onInputChange}\r\n             checked={done}/>\r\n      <label htmlFor={date}>\r\n        <div className=\"todo-item__wrapper\">\r\n          <span className=\"todo-item__checkbox\"></span>\r\n          <span className=\"todo-item__text\">{text}</span>\r\n        </div>\r\n        <p className=\"todo-item__date\">{recDate}</p>\r\n      </label>\r\n      <div className=\"todo-item__button-container\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"todo-item__edit\"\r\n          onClick={editFunc}>\r\n          <svg fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 24 24\" width=\"18px\" height=\"18px\">    <path d=\"M 18 2 L 15.585938 4.4140625 L 19.585938 8.4140625 L 22 6 L 18 2 z M 14.076172 5.9238281 L 3 17 L 3 21 L 7 21 L 18.076172 9.9238281 L 14.076172 5.9238281 z\"/></svg>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"todo-item__close\"\r\n          onClick={onCloseClick}></button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  onInputChange: PropTypes.func.isRequired,\r\n  onCloseClick: PropTypes.func.isRequired,\r\n  setAddForm: PropTypes.func.isRequired,\r\n  children: PropTypes.shape({\r\n    date: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    done: PropTypes.bool.isRequired,\r\n  }).isRequired\r\n}\r\n\r\nconst mapStateToProps = () =>({});\r\n\r\nconst mapDispatchToProps = {\r\n  setAddForm\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);","import TodoItem from \"./todo-item\";\r\nexport default TodoItem;","import AddButton from \"./addButton\";\r\nexport default AddButton;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./button.scss\";\r\n\r\n// в children хранятся доп классы для button\r\nconst AddButton = ({clickFunc, children = ``}) => <button onClick={clickFunc} className={`add-button ${children}`}>+</button>;\r\n\r\nAddButton.propTypes = {\r\n  clickFunc: PropTypes.func.isRequired,\r\n  children: PropTypes.string\r\n}\r\n\r\nexport default AddButton;","import React, {useState, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {setAddForm, fetchRecordsWithCallback} from \"../../actions\";\r\n\r\nimport TodoItem from \"../todo-item\";\r\nimport AddButton from \"../add-button\";\r\nimport \"./todo-list.scss\";\r\n\r\n\r\nconst TodoList = ({setAddForm, fetchRecords, children = []}) =>{\r\n\r\n  const [addButtonClass, setAddButtonClass] = useState(``);\r\n\r\n  // по клику по AddButton отображается addForm\r\n  const buttonClickFunc = () => setAddForm({\r\n    status: true,\r\n    type: `add`\r\n  });\r\n\r\n  const todoItems = children.map((value) =>{\r\n\r\n    // при изменении input меняем done статус у данной заметки, и обновляем store\r\n    const onInputChange = () => fetchRecords(`changeDoneStatus`,value.date);\r\n\r\n    // удаляем данную заметку, и обновляем store\r\n    const onCloseClick = () => fetchRecords(`deleteRecord`, value.date);\r\n\r\n    return <TodoItem key={value.date} onInputChange={onInputChange} onCloseClick={onCloseClick}>{value}</TodoItem>;\r\n  });\r\n\r\n  // при обновлении, проверяем высоту документа и при необходимости меняем класс у addButton, для корректного отображения компонента\r\n\r\n  useEffect(() =>{\r\n    const classes = (document.getElementById(`app`).clientHeight <= 604) ? ` fix-pos` : ``;\r\n    (addButtonClass !== classes) && setAddButtonClass(classes);\r\n  });\r\n\r\n  return (\r\n    <section className=\"todo-list\" aria-label=\"Todo Tabs\">\r\n      <div className=\"todo-list__wrapper\">\r\n        {todoItems}\r\n        <AddButton clickFunc={buttonClickFunc}>{addButtonClass}</AddButton>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = () =>({});\r\n\r\nconst  mapDispatchToProps ={\r\n  setAddForm,\r\n  fetchRecords: fetchRecordsWithCallback\r\n}\r\n\r\nTodoList.propTypes = {\r\n  setAddForm: PropTypes.func.isRequired,\r\n  fetchRecords: PropTypes.func.isRequired,\r\n  children: PropTypes.arrayOf(PropTypes.shape({\r\n    date: PropTypes.number.isRequired,\r\n    done: PropTypes.bool.isRequired,\r\n    text: PropTypes.string.isRequired\r\n  }))\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","import TodoList from \"./todo-list\";\r\nexport default TodoList;","import AddForm from \"./add-form\";\r\nexport default AddForm;","import React, {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./add-form.scss\";\r\n\r\nconst AddForm = ({sendFunc, areaText = ``, children = ``, type}) =>{\r\n\r\n  const [areaValue, setAreaValue] = useState(areaText);\r\n\r\n  // для вывода уведомления, при попытке отправить пустое value\r\n  const [areaValueIsEmpty, setAreaValueIsEmpty] = useState(false);\r\n\r\n  const onChange = ({target:{value}}) => setAreaValue(value);\r\n\r\n  let title;\r\n  let buttonTitle;\r\n\r\n  // в завимости от типа меняем title\r\n  if (type === `edit`){\r\n    title = `Изменить заметку`;\r\n    buttonTitle = `Изменить`;\r\n  }\r\n  else if (type === `add`) {\r\n    title = `Добавить заметку`;\r\n    buttonTitle = `Добавить`;\r\n  }\r\n\r\n  const notificationText = `Текст заметки пуст`;\r\n\r\n  // при фокусе убираем уведомление\r\n  const onFocus = () => setAreaValueIsEmpty(false);\r\n\r\n  const onSubmit = (evt) =>{\r\n    evt.preventDefault();\r\n    // если пустая строка, выводим уведомление\r\n    if (areaValue.trim() === ``){\r\n      setAreaValueIsEmpty(true);\r\n      setAreaValue(``);\r\n      return\r\n    }\r\n    sendFunc(areaValue);\r\n  }\r\n\r\n  return (\r\n    <div className={`add-form__wrapper ${children}`}>\r\n      <form className=\"add-form\" onSubmit={onSubmit}>\r\n        <div className=\"add-form__fieldset-wrapper\">\r\n        <h1 className=\"add-form__title\" data-add-form>{title}</h1>\r\n        <fieldset data-add-form>\r\n          <textarea name=\"add-form__textarea\" id=\"add-form__textarea\" className=\"add-form__textarea\" cols=\"30\" rows=\"10\" data-add-form value={areaValue} onChange={onChange} onFocus={onFocus} autoFocus={true}></textarea>\r\n          {areaValueIsEmpty &&\r\n          <p className=\"add-form__notification\" data-add-form>{notificationText}</p>}\r\n          <button type=\"button\" className=\"add-form__button\" data-add-form onClick={onSubmit}>{buttonTitle}</button>\r\n        </fieldset>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  );\r\n}\r\n\r\nAddForm.propTypes = {\r\n  sendFunc: PropTypes.func.isRequired,\r\n  children: PropTypes.string,\r\n  areaText: PropTypes.string,\r\n  type: PropTypes.string\r\n}\r\n\r\nexport default AddForm;","import Notification from \"./notification\";\r\nexport default Notification;","import React from \"react\";\r\nimport \"./notification.scss\";\r\n\r\nconst Notification = () => <p className=\"notification\">Что-то пошло не так</p>;\r\n\r\nexport default Notification;","import React, {Component} from \"react\";\r\nimport Notification from \"../notification\";\r\n\r\nclass ErrorBoundary extends Component {\r\n\r\n  state = {\r\n    hasError: false\r\n  }\r\n\r\n  componentDidCatch() {\r\n    this.setState({hasError: true});\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError){\r\n      return <Notification/>;\r\n    }\r\n    else {\r\n      return this.props.children;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import ErrorBoundary from \"./error-boundary\";\r\nexport default ErrorBoundary;","import React, {useEffect} from \"react\";\r\nimport {Transition} from \"react-transition-group\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchRecordsWithCallback, setAddForm} from \"../../actions\";\r\nimport {Navigate, Route, Routes, useLocation,} from \"react-router-dom\";\r\nimport {filterByDoneStatus} from \"../../utils\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./app.scss\";\r\nimport Header from \"../header\";\r\nimport TodoCategories from \"../todo-categories\";\r\nimport TodoList from \"../todo-list\";\r\nimport AddForm from \"../add-form\";\r\nimport ErrorBoundary from \"../error-boundary\";\r\n\r\nconst App = ({setAddForm, records, fetchRecords, addForm}) =>{\r\n\r\n  // массив для todo-categories\r\n  const categoriesLinks = [\r\n    {\r\n      id: 0,\r\n      href: `/`,\r\n      title: `All tasks`,\r\n      icon: `menu`\r\n    },\r\n    {\r\n      id: 1,\r\n      href: `/todo`,\r\n      title: `Todo`,\r\n      icon: `list`\r\n    },\r\n    {\r\n      id: 2,\r\n      href: `/done`,\r\n      title: `Done`,\r\n      icon: `done`\r\n    }\r\n  ];\r\n\r\n  // плавный скролл в начало документа\r\n  const scrollOnTop = () => setTimeout(() =>\r\n    window.scrollBy({\r\n      top: -document.body.offsetHeight,\r\n      behavior: 'smooth'\r\n    }), 200);\r\n\r\n  // функция для добавления записи\r\n  const formAddFunc = async (text) =>{\r\n\r\n    //добавляем запись в localstorage, а следом в store обновленный массив из localstorage\r\n    fetchRecords(`addRecord`, text);\r\n\r\n    // меняем AddFormStatus на false\r\n    await setAddForm({\r\n      status: false,\r\n      type: `add`,\r\n    });\r\n\r\n    // скроллим страницу на начало документа\r\n    scrollOnTop();\r\n  }\r\n  \r\n  // функция для редактирования записей\r\n  const formEditFunc = async (text) =>{\r\n\r\n    //редактируем запись в localstorage, а следом в store добавляем обновленный массив из localstorage\r\n    fetchRecords(`editRecord`, {\r\n      text,\r\n      id: addForm.record.id\r\n    });\r\n\r\n    // меняем AddFormStatus на false\r\n    await setAddForm({\r\n      status: false,\r\n      type: `edit`,\r\n      record: {\r\n        id: null,\r\n        text: ``\r\n      }\r\n    });\r\n\r\n    // скроллим страницу на начало документа\r\n    scrollOnTop();\r\n  }\r\n\r\n  // после первого монтирования, получаем в store массив записей из localstorage\r\n  useEffect(() => fetchRecords(),[]);\r\n\r\n  // в зависимости от категории сортируем массив записей в роутах\r\n  const routes = (\r\n    <ErrorBoundary>\r\n      <Routes>\r\n\r\n        <Route path=\"/\" element={<TodoList>{records}</TodoList>\r\n        } exact/>\r\n\r\n        <Route path=\"/todo\" element={\r\n          <TodoList>{filterByDoneStatus(records, false)\r\n          }</TodoList>\r\n        } exact/>\r\n\r\n        <Route path=\"/done\" element={\r\n          <TodoList>{filterByDoneStatus(records, true)\r\n          }</TodoList>\r\n        } exact/>\r\n\r\n        <Route path=\"*\" element={<Navigate to=\"/\"/>} />\r\n\r\n      </Routes>\r\n     </ErrorBoundary>\r\n  );\r\n\r\n  const {pathname} = useLocation();\r\n\r\n  // получаем id для header\r\n  const headerTitleId = categoriesLinks.findIndex(({href}) => pathname === href);\r\n\r\n  // при активном модальном окне, при смене фокуса, если у элемента нет атрибута data-add-form, возвращаем фокус на предыдущий элемент\r\n  const tabDownHandler = (evt) =>{\r\n    if (evt.relatedTarget === null){\r\n      return;\r\n    }\r\n    if (addForm.status){\r\n      if (!evt.relatedTarget.dataset.addForm){\r\n        evt.target.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  // при активном модальном окне, при клике по элементу без атрибута data-add-form или нажатию Esc, меняем AddFormStatus на false\r\n  const formCloseHandler = ({target, key}) =>{\r\n    if (addForm.status && (!target.dataset.addForm || key === `Escape`)){\r\n      setAddForm({status: false});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"app\" className=\"app\" onBlur={tabDownHandler} onMouseDown={formCloseHandler} onKeyUp={formCloseHandler}>\r\n      <Header>{`Todo list - ${categoriesLinks[headerTitleId]?.title}`}</Header>\r\n      <section className=\"app__main\">\r\n        <ErrorBoundary>\r\n          <TodoCategories>{categoriesLinks}</TodoCategories>\r\n        </ErrorBoundary>\r\n        {routes}\r\n      </section>\r\n\r\n      <Transition\r\n        in={addForm.status}\r\n        timeout={200}\r\n        mountOnEnter\r\n        unmountOnExit>\r\n          {(state) =>\r\n            <ErrorBoundary>\r\n              <AddForm\r\n                sendFunc={addForm.type === `edit` ? formEditFunc : formAddFunc}\r\n                type={addForm.type}\r\n                areaText={addForm?.record?.text || ``}>{`${state}`}</AddForm>\r\n            </ErrorBoundary>\r\n          }\r\n      </Transition>\r\n    </div>\r\n  );\r\n}\r\n\r\nApp.propTypes = {\r\n  addForm: PropTypes.shape({\r\n    status: PropTypes.bool.isRequired,\r\n    type: PropTypes.oneOf([`edit`, `add`, ``]),\r\n    record: PropTypes.shape({\r\n      id: PropTypes.number,\r\n      text: PropTypes.string\r\n    })\r\n  }).isRequired,\r\n  setAddForm: PropTypes.func.isRequired,\r\n  fetchRecords: PropTypes.func.isRequired,\r\n  records: PropTypes.arrayOf(PropTypes.shape({\r\n    date: PropTypes.number.isRequired,\r\n    done: PropTypes.bool.isRequired,\r\n    text: PropTypes.string.isRequired\r\n  })).isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) =>({...state});\r\n\r\nconst mapDispatchToProps = {\r\n  setAddForm,\r\n  fetchRecords: fetchRecordsWithCallback\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import App from \"./app\";\r\nexport default App;","const initialState = {\r\n  addForm:{\r\n    status: false,\r\n    type: `edit`,\r\n    record:{\r\n      id: null,\r\n      text: ``\r\n    }\r\n  },\r\n  records: []\r\n}\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n  switch (action.type) {\r\n    case `SET_ADD_FORM`:\r\n      return {\r\n        ...state,\r\n        addForm:{\r\n          ...state.addForm,\r\n          ...action.payload\r\n        }\r\n      }\r\n    case `FETCH_RECORDS`:\r\n      return {\r\n        ...state,\r\n        records: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import {createStore} from \"redux\";\r\nimport reducer from \"./reducers\";\r\n\r\n// const middleware = () => (next) => (action) =>{\r\n//   console.log(action.type);\r\n//   console.log(action.payload);\r\n//   return next(action);\r\n// }\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/app\";\nimport store from \"./store\";\nimport {Provider} from \"react-redux\"\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App/>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}